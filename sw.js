(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.0"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.0"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.0"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.0"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"5e090e32e677bf82748b8973d60d2054","url":"404.html"},{"revision":"10ee16c949f5d5edff78b2da55ced76e","url":"assets/css/styles.a60a2eaf.css"},{"revision":"4a08a467edfb03158ff4d687ad3561cb","url":"assets/js/01a85c17.d02b3489.js"},{"revision":"fccebab8510500d4f0da9ce409403550","url":"assets/js/07c6a50d.6c03014b.js"},{"revision":"544658c9142b7abf621da305862f8c4d","url":"assets/js/0e384e19.81c0a9a5.js"},{"revision":"7beae7fe09fdc1c1a83581a77a186f4f","url":"assets/js/100fb24b.0793fbe6.js"},{"revision":"0bee63f8f1ac187fce076193eb8a34de","url":"assets/js/17896441.2d8ec58a.js"},{"revision":"fb8217dd384fb269295bc45dcd30a8b5","url":"assets/js/1a4e3797.218bbcf7.js"},{"revision":"62167b922c11894ec5aa51a089454693","url":"assets/js/1be78505.752ca34d.js"},{"revision":"889c4ee46d1b2e649963c453ec0d1e12","url":"assets/js/1f391b9e.f99f3b50.js"},{"revision":"dfb4b0ad43d9c3ecc32b04f781324911","url":"assets/js/230.4a28605a.js"},{"revision":"3619ffde750b63a80f2c59efdc39278d","url":"assets/js/2ae76d86.ff08c18a.js"},{"revision":"163f3bde5dc703e6c9e7a6f3d6646b7b","url":"assets/js/3720c009.18b846c9.js"},{"revision":"4bd48ed6fc2a9f7691b9acb67e9766db","url":"assets/js/393be207.a00f242c.js"},{"revision":"82d19f320745846cef003bcb0f52b306","url":"assets/js/393c980b.9f36e6b6.js"},{"revision":"08610270f08a396b8cf5671077d9cb31","url":"assets/js/398e9369.98281d27.js"},{"revision":"8f480bfc6b274ad63b3a8200a0a019f3","url":"assets/js/39a4cb35.ba5544aa.js"},{"revision":"10f47f03e22ba44b476c6149fb4ea987","url":"assets/js/3e5f1c1d.2569f6d4.js"},{"revision":"30bf9405cb27437307f1629d889a7b01","url":"assets/js/4608.ffc93644.js"},{"revision":"e3a48312982fd069796519cf0a99b3ef","url":"assets/js/4a34ac59.ee70edf5.js"},{"revision":"22a36651169f4b34ec73116fd76dfcbb","url":"assets/js/5131.dfe83188.js"},{"revision":"fb0f095b001c824deb88ad2de985e34c","url":"assets/js/5283.96f9352e.js"},{"revision":"31a67ca92fdc08bac327106cfc1998ff","url":"assets/js/5525.1fbb0d9d.js"},{"revision":"ef5a461beea4cddbf2560bf16da2b627","url":"assets/js/55960ee5.790bf821.js"},{"revision":"ef1af00a211dfc78339b55f8dd18ecb8","url":"assets/js/5897.592db2fd.js"},{"revision":"4217f41ed58c30ca475683c2231ae3bc","url":"assets/js/59362658.7148c8f6.js"},{"revision":"2b24fa49f07d69a40bfa40d6ef8fce7b","url":"assets/js/656beb65.ff0987c0.js"},{"revision":"88dbaa0feb6328086866e65ec0707517","url":"assets/js/678b3ec3.227af83d.js"},{"revision":"f43fedf2b4197ea4e2d93ed5159310b0","url":"assets/js/6875c492.a2a9d6b8.js"},{"revision":"05986ada03fdf4aeca4e657948af6d8f","url":"assets/js/6bdc135b.77096e56.js"},{"revision":"a69cbe69f7d8c2394885e33ea34b4066","url":"assets/js/73664a40.ce810027.js"},{"revision":"c2b5e8091c91eaf6cd5db8bb35f4d692","url":"assets/js/7661071f.2e19b7eb.js"},{"revision":"6cf4876b07f25f953d737bf6ea78292f","url":"assets/js/77914c85.0572fd4e.js"},{"revision":"17c632391e0c9449eed59b17e881201a","url":"assets/js/7bed68bb.29a24e5b.js"},{"revision":"f66616815adf0c531346d4f2b94ee445","url":"assets/js/7cdb8f2b.d746a23f.js"},{"revision":"d168857212dfe6fb0490d24b786f8c41","url":"assets/js/814f3328.4927a462.js"},{"revision":"8207348232b3a7f04dbba94333fb25e7","url":"assets/js/81e9c77e.00b25d70.js"},{"revision":"30c9b147f2f61a305f64c2e19df2d8a4","url":"assets/js/8368e821.2088f0a7.js"},{"revision":"c0b81577b1f3e3b08dbe58281c8e8585","url":"assets/js/8443.e8b0ea09.js"},{"revision":"4992932fd1863da39f8394b3a7f3f6a6","url":"assets/js/8717b14a.933d676d.js"},{"revision":"65a71f800094f384a7aad4df4881ddbc","url":"assets/js/8b5c1511.ead0e85a.js"},{"revision":"f8c5f512f6c104b0a2bf1bf40262f586","url":"assets/js/8c597e0f.dee60c3e.js"},{"revision":"475acbb798417a5c12b145cccab0aa45","url":"assets/js/925b3f96.5e21c42f.js"},{"revision":"a05e642260f7fd7678eb7e6b87b8cba3","url":"assets/js/935f2afb.e3056be8.js"},{"revision":"ecf2bb514d54d2de23731af6202da5f1","url":"assets/js/93989b31.f3228f49.js"},{"revision":"a7ec4e1bf306a139266ab1458c8a1364","url":"assets/js/956658e1.a262f7b6.js"},{"revision":"4222e7980304bc9e418c93f4c3280e10","url":"assets/js/9e4087bc.f44c1dcb.js"},{"revision":"a4383925b3226426eb55af8424f8e484","url":"assets/js/9ec770cb.23d77dd3.js"},{"revision":"0ef7be57b1a4d04bfd732f15c388d249","url":"assets/js/a1daf4eb.740618d0.js"},{"revision":"9a2e9c1234ef25a4f3535d4fce3a752e","url":"assets/js/a6aa9e1f.d29fe31a.js"},{"revision":"3d2e93a1dba3fa20ca0605ab04be46c0","url":"assets/js/a76ef80d.e9ff6c4e.js"},{"revision":"722b574a8a2f33e992936bebffd57da9","url":"assets/js/ab2a1445.49ff017e.js"},{"revision":"cc846cdb5330f4f32eddb95fd884969f","url":"assets/js/ad22c282.a29f33e2.js"},{"revision":"478a41895991d181e3341cba91b4f710","url":"assets/js/ae220780.f575fb87.js"},{"revision":"74c458d56cf2c1934fb1df6c6a64977e","url":"assets/js/b94fa5a2.a4a72edf.js"},{"revision":"2ee72714bce6848e897f02c627750c41","url":"assets/js/bb293123.c5266879.js"},{"revision":"991ea28b1ccccacc1aad189c50f7c86b","url":"assets/js/c484fe4f.9500e7be.js"},{"revision":"e6a9b0dda0c3fd1f2ed0782e1e42a73b","url":"assets/js/c4f5d8e4.c6456bdf.js"},{"revision":"c95c28a7184f76deb3110ab4e3ac7ab8","url":"assets/js/ccc49370.8cf84a0d.js"},{"revision":"156085d4528d22e9feafc1401471dc6e","url":"assets/js/d9f32620.4efcb36e.js"},{"revision":"2b2c3db9663623cd02e6ad65b7cedaf2","url":"assets/js/dd6c4fa0.e344b2cf.js"},{"revision":"8ad9553602a3067a797f7f2b5faab50b","url":"assets/js/df203c0f.cd470c82.js"},{"revision":"bce8eb73ddc383ae98fef16458d89253","url":"assets/js/e273c56f.29bb6d78.js"},{"revision":"05998165a8cb72467a805bef103a308a","url":"assets/js/e657d966.dffa30b9.js"},{"revision":"c6d938556f1df11f06cd450646719550","url":"assets/js/f4f34a3a.eaa98fe2.js"},{"revision":"d169de47e2c8eaa9607dbd9b212757cc","url":"assets/js/fc81b9cd.63dbca27.js"},{"revision":"ea35626b524d3206339116dd4813ff8a","url":"assets/js/main.ae64a72a.js"},{"revision":"cdded39954908b36a3b522e5f652b312","url":"assets/js/runtime~main.10bd3387.js"},{"revision":"551cb97cc383237705a119bf2cc1a293","url":"blog.html"},{"revision":"9661a2c376dd26a457572a2519d2e488","url":"blog/archive.html"},{"revision":"5f5c84d753478ec988a7062265e3df28","url":"blog/first-blog-post.html"},{"revision":"9844f7c191fb3ec6dddfe28c26c57f9f","url":"blog/long-blog-post.html"},{"revision":"9ad6e53ec29f7aed040f67a7cffcbe38","url":"blog/mdx-blog-post.html"},{"revision":"782def44ddd6bf5e888fe6520131c4cb","url":"blog/tags.html"},{"revision":"d04794b65cac18b12bb314893fbd44f8","url":"blog/tags/docusaurus.html"},{"revision":"22ee8dadf713dc757f05b0563abe767c","url":"blog/tags/facebook.html"},{"revision":"38b5999d9f76d3a18b3cc719b4414f88","url":"blog/tags/hello.html"},{"revision":"5bb77090e7a606da5a626c32dd7b69ce","url":"blog/tags/hola.html"},{"revision":"c194c91f29d5a583062edfc5b94f2c7d","url":"blog/welcome.html"},{"revision":"371bb488fb9d7f55edaf91dc00107380","url":"docs/create-new-page.html"},{"revision":"0902f018be127cf1b07bc87dccfeaeb5","url":"docs/create-new-page/create-a-blog-post.html"},{"revision":"8b9342e926ba1f49dcb7267e3d877cfa","url":"docs/create-new-page/create-a-document.html"},{"revision":"c6e3e0ac1b0bdc5e32976495a3b78935","url":"docs/create-new-page/create-a-page.html"},{"revision":"eb075e2423b6621053f3b85226a19738","url":"docs/create-new-page/markdown-features.html"},{"revision":"1f4fcb52c0e2eeb8b665d261a2295eae","url":"docs/create-new-page/temp1/create-a-page.html"},{"revision":"05142a2d55ca2c1f88110eb53e434956","url":"docs/intro.html"},{"revision":"bf779767cc84072b5f21e61d1cc78bed","url":"docs/markdown.html"},{"revision":"2d23ca9ac823d008382f6a09e3caa72c","url":"docs/markdown/LaTeX.html"},{"revision":"1bb5a24449e0217cea1c3b684c7946ca","url":"docs/node-js/NodeJS.html"},{"revision":"89ee6ffe213502ad7c6938dc0534b504","url":"docs/Q-A/Q&A-Windows.html"},{"revision":"7ecf68f7f979ccc9a224d20dc6b9230f","url":"docs/Q-A/Q&A.html"},{"revision":"807ecd8964d8ecac3b440d30059f691b","url":"docs/tags.html"},{"revision":"9b9dc2f110660850960d9fa5b0d0c6f5","url":"docs/tags/la-te-x.html"},{"revision":"c5bc383d96e8ccd8433653e575b3c31c","url":"docs/tags/markdown.html"},{"revision":"f5aa5634f67366d9286ceb527bf310ab","url":"docs/tags/node-js.html"},{"revision":"99e8bb040d46d6b6df91d4d9fae5da3e","url":"docs/tags/note.html"},{"revision":"a4f36d6a1b94b46eb458f23f5d2c0196","url":"docs/tags/q-a.html"},{"revision":"0300025f6a734b0ce1bee180a2d8b30a","url":"docs/tags/windows.html"},{"revision":"6d310f7a1f3cb97f81244aed78b212f4","url":"docs/tags/图床.html"},{"revision":"bd349d0224eead39d3646abf42de3975","url":"docs/tags/开始使用.html"},{"revision":"3fe81a3d7d22dc5540ba41e6f3527849","url":"docs/tags/标签.html"},{"revision":"9b0d5b2d860b71d9b7fb0ad4640fff24","url":"docs/图床/图床及使用相关.html"},{"revision":"3510f26ba61630429ce484383bd1519f","url":"index.html"},{"revision":"b5a5eae8c0b3bd48a6361ccf31b2f7fc","url":"manifest.json"},{"revision":"904e444e9699d5cfd96214780b16b5db","url":"markdown-page.html"},{"revision":"57114bc7914af2e0f6a0e328f7563288","url":"search-index.json"},{"revision":"fe9f92f609b9bd262f63b7e3d2165103","url":"search.html"},{"revision":"192a6a160f31b1689a4c6233bdbbb803","url":"assets/images/docusaurus-plushie-banner-a60f7593abca1e3eef26a9afa244e4fb.jpeg"},{"revision":"7fa1a026116afe175cae818030d4ffc4","url":"img/docusaurus.png"},{"revision":"4343e07bf942aefb5f334501958fbc0e","url":"img/favicon.ico"},{"revision":"aa4fa2cdc39d33f2ee3b8f245b6d30d9","url":"img/logo.svg"},{"revision":"b9d9189ed8f8dd58e70d9f8b3f693b3e","url":"img/tutorial/docsVersionDropdown.png"},{"revision":"c14bff79aafafca0957ccc34ee026e2c","url":"img/tutorial/localeDropdown.png"},{"revision":"a6b83d7b4c3cf36cb21eb7a9721716dd","url":"img/undraw_docusaurus_mountain.svg"},{"revision":"b64ae8e3c10e5ff2ec85a653cfe6edf8","url":"img/undraw_docusaurus_react.svg"},{"revision":"8fa6e79a15c385d7b2dc4bb761a2e9e3","url":"img/undraw_docusaurus_tree.svg"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=[],s=new URL(e,self.location.href);return s.origin!==self.location.origin||(s.search="",s.hash="",t.push(s.href),s.pathname.endsWith("/")?t.push(`${s.href}index.html`):t.push(`${s.href}/index.html`)),t}(a);for(let i=0;i<n.length;i+=1){const r=n[i],c=s.getCacheKeyForURL(r);if(c){const s=caches.match(c);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:r,possibleURLs:n,cacheKey:c,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});"SKIP_WAITING"===(t.data&&t.data.type)&&self.skipWaiting()}))})()})()})();